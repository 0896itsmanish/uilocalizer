plugins {
    id "org.jetbrains.intellij" version "0.3.4"
}

apply plugin: 'org.jetbrains.intellij'

intellij {
    version '2017.2.2'
    plugins 'java-i18n', 'properties'
    // pluginName 'string-localization-plugin'
    updateSinceUntilBuild false
    downloadSources false
}

configurations {
    pluginBuild
    compile.extendsFrom(pluginBuild)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifacts = project.configurations.getByName(Dependency.ARCHIVES_CONFIGURATION).getArtifacts().files.filter{it.name.endsWith("zip")}
        }
    }
}

dependencies {
    pluginBuild project(':uilocalizer-api')
}

jar {
    //Required to collect annotations from the "uilocalizer-api" module
    from configurations.pluginBuild.asFileTree.files.collect { zipTree(it) }
}

javadoc.source += project(':uilocalizer-api').sourceSets.main.java.files
sourcesJar {
    from project(':uilocalizer-api').sourceSets.main.java
}

task licenseCheckIdeaTests(type: com.hierynomus.gradle.license.tasks.LicenseCheck) {
    source = fileTree(dir: "src/test/testData/stringLocalization/").include("**/*.*")
}
licenseTest.dependsOn licenseCheckIdeaTests

task licenseFormatIdeaTests(type: com.hierynomus.gradle.license.tasks.LicenseFormat) {
    source = fileTree(dir: "src/test/testData/stringLocalization/").include("**/*.*")
}
licenseFormat.dependsOn licenseFormatIdeaTests
